apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-logs-collector
  namespace: kanni-ai
spec:
  mode: daemonset
  image: otel/opentelemetry-collector-contrib:latest
  env:
    - name: GRAFANA_LOKI_TOKEN
      valueFrom:
        secretKeyRef:
          name: grafana-tokens
          key: loki-token
  config:
    extensions:
      basicauth/loki:
        client_auth:
          username: "1364258"
          password: "${GRAFANA_LOKI_TOKEN}"

    receivers:
      filelog:
        include: 
          - /var/log/pods/kanni-ai_*/*/*.log
        exclude:
          - /var/log/pods/kanni-ai_*otel*/*/*.log
        operators:
          - type: regex_parser
            regex: '^(?P<time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) (?P<log>.*)'
            parse_from: body
            timestamp:
              parse_from: attributes.time
              layout_type: strptime
              layout: '%Y-%m-%dT%H:%M:%S.%fZ'

    processors:
      batch:
        timeout: 5s
        send_batch_size: 512
      resource:
        attributes:
          - key: service.name
            value: kanni-ai
            action: upsert
          - key: k8s.namespace.name
            value: kanni-ai
            action: upsert

    exporters:
      otlphttp/logs:
        endpoint: "https://logs-prod-012.grafana.net/otlp"
        auth:
          authenticator: basicauth/loki
      
      debug:
        verbosity: detailed

    service:
      extensions: [basicauth/loki]
      pipelines:
        logs:
          receivers: [filelog]
          processors: [batch, resource]
          exporters: [otlphttp/logs, debug]

  volumeMounts:
    - name: varlog
      mountPath: /var/log
      readOnly: true
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true

  volumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers