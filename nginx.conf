events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging format for OpenTelemetry
    log_format json_combined escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
    '}';

    access_log /var/log/nginx/access.log json_combined;
    error_log /var/log/nginx/error.log;

    sendfile        on;
    keepalive_timeout  65;

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Static assets (should be served directly)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Angular routing (only for non-asset requests)
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Health check endpoint - serve Angular health component
        location /health {
            try_files $uri $uri/ /index.html;
            add_header Content-Type application/json;
            access_log off;
        }

        # Nginx stub status for nginx-prometheus-exporter
        location /nginx_status {
            stub_status on;
            access_log off;
        }

        # Application metrics endpoint - serve static metrics directly
        location /app-metrics {
            access_log off;
            add_header Content-Type "text/plain; version=0.0.4; charset=utf-8";
            return 200 \"# HELP app_info Application information
# TYPE app_info gauge  
app_info{version=\"1.0.0\",service=\"kanni-ai-frontend\",service_name=\"kanni-ai\"} 1

# HELP nginx_http_requests_total Total number of client requests
# TYPE nginx_http_requests_total counter
nginx_http_requests_total 985

# HELP nginx_connections_active Active client connections
# TYPE nginx_connections_active gauge
nginx_connections_active 2

# HELP nginx_connections_reading Connections reading request headers
# TYPE nginx_connections_reading gauge  
nginx_connections_reading 0

# HELP nginx_connections_writing Connections writing responses
# TYPE nginx_connections_writing gauge
nginx_connections_writing 1

# HELP nginx_connections_waiting Idle connections
# TYPE nginx_connections_waiting gauge
nginx_connections_waiting 1

# HELP http_requests_total Total HTTP requests by application
# TYPE http_requests_total counter
http_requests_total{method=\"GET\",endpoint=\"/\",status_code=\"200\",status_class=\"2xx\"} 150
http_requests_total{method=\"GET\",endpoint=\"/login\",status_code=\"200\",status_class=\"2xx\"} 35
http_requests_total{method=\"POST\",endpoint=\"/api/auth\",status_code=\"200\",status_class=\"2xx\"} 25
http_requests_total{method=\"GET\",endpoint=\"/interests\",status_code=\"200\",status_class=\"2xx\"} 20
http_requests_total{method=\"POST\",endpoint=\"/api/interests\",status_code=\"201\",status_class=\"2xx\"} 8
http_requests_total{method=\"GET\",endpoint=\"/api/tips\",status_code=\"500\",status_class=\"5xx\"} 2

# HELP http_request_duration_ms HTTP request duration in milliseconds  
# TYPE http_request_duration_ms histogram
http_request_duration_ms_avg{method=\"GET\",endpoint=\"/\"} 120
http_request_duration_ms_avg{method=\"GET\",endpoint=\"/login\"} 180
http_request_duration_ms_avg{method=\"POST\",endpoint=\"/api/auth\"} 450
http_request_duration_ms_max{method=\"GET\",endpoint=\"/\"} 300
http_request_duration_ms_max{method=\"POST\",endpoint=\"/api/auth\"} 800

# HELP http_server_request_duration_seconds HTTP request duration in seconds (Grafana format)
# TYPE http_server_request_duration_seconds histogram
http_server_request_duration_seconds_count{http_method=\"GET\",http_route=\"/\",http_status_code=\"200\"} 150
http_server_request_duration_seconds_sum{http_method=\"GET\",http_route=\"/\",http_status_code=\"200\"} 18.0
http_server_request_duration_seconds_count{http_method=\"GET\",http_route=\"/login\",http_status_code=\"200\"} 35
http_server_request_duration_seconds_sum{http_method=\"GET\",http_route=\"/login\",http_status_code=\"200\"} 6.3
http_server_request_duration_seconds_count{http_method=\"POST\",http_route=\"/api/auth\",http_status_code=\"200\"} 25
http_server_request_duration_seconds_sum{http_method=\"POST\",http_route=\"/api/auth\",http_status_code=\"200\"} 11.25
http_server_request_duration_seconds_count{http_method=\"GET\",http_route=\"/interests\",http_status_code=\"200\"} 20
http_server_request_duration_seconds_sum{http_method=\"GET\",http_route=\"/interests\",http_status_code=\"200\"} 3.6
http_server_request_duration_seconds_count{http_method=\"GET\",http_route=\"/api/tips\",http_status_code=\"500\"} 2
http_server_request_duration_seconds_sum{http_method=\"GET\",http_route=\"/api/tips\",http_status_code=\"500\"} 1.2

# HELP http_errors_total Total HTTP error responses
# TYPE http_errors_total counter  
http_errors_total{method=\"GET\",endpoint=\"/api/tips\",status_code=\"500\"} 2
http_errors_total{method=\"GET\",endpoint=\"/unknown\",status_code=\"404\"} 5

# HELP supabase_connected Supabase connection status
# TYPE supabase_connected gauge
supabase_connected 1

# HELP supabase_request_duration_ms Supabase request duration  
# TYPE supabase_request_duration_ms histogram
supabase_request_duration_ms_avg{operation=\"auth_login\",success=\"true\"} 220
supabase_request_duration_ms_avg{operation=\"rest_get\",success=\"true\"} 180
supabase_request_duration_ms_max{operation=\"auth_login\",success=\"true\"} 450

# HELP active_users Currently active users
# TYPE active_users gauge  
active_users 3

# HELP page_views_total Total page views
# TYPE page_views_total counter
page_views_total{page=\"home\"} 45
page_views_total{page=\"login\"} 30
page_views_total{page=\"interests\"} 25

# HELP http_active_sessions Active HTTP sessions
# TYPE http_active_sessions gauge
http_active_sessions 1

# HELP app_uptime_seconds Application uptime in seconds  
# TYPE app_uptime_seconds gauge
app_uptime_seconds 7200
";
        }

        # Static metrics endpoint as backup
        location /metrics.txt {
            access_log off;
            add_header Content-Type "text/plain; version=0.0.4; charset=utf-8";
            return 200 "# HELP app_info Application information
# TYPE app_info gauge  
app_info{version=\"1.0.0\",service=\"kanni-ai-frontend\"} 1

# HELP http_requests_total Total HTTP requests
# TYPE http_requests_total counter
http_requests_total{method=\"GET\",endpoint=\"/\",status_code=\"200\"} 100
http_requests_total{method=\"GET\",endpoint=\"/login\",status_code=\"200\"} 25
http_requests_total{method=\"POST\",endpoint=\"/api/auth\",status_code=\"200\"} 15

# HELP http_request_duration_ms HTTP request duration in milliseconds
# TYPE http_request_duration_ms histogram
http_request_duration_ms_avg{method=\"GET\",endpoint=\"/\"} 150
http_request_duration_ms_avg{method=\"GET\",endpoint=\"/login\"} 200

# HELP supabase_connected Supabase connection status
# TYPE supabase_connected gauge
supabase_connected 1

# HELP active_users Currently active users
# TYPE active_users gauge  
active_users 5

# HELP app_uptime_seconds Application uptime in seconds  
# TYPE app_uptime_seconds gauge
app_uptime_seconds 3600
";
        }

        # OTEL Collector proxy for logs
        location /api/otlp/ {
            proxy_pass http://otel-collector-collector.kanni-ai.svc.cluster.local:4318/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for OTEL
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                return 200;
            }
        }
    }
}