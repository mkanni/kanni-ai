apiVersion: apps/v1
kind: Deployment
metadata:
  name: kanni-ai-app
  namespace: kanni-ai
  labels:
    app: kanni-ai
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: kanni-ai
  template:
    metadata:
      labels:
        app: kanni-ai
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
        prometheus.io/path: "/metrics"
        deployment.kubernetes.io/restartedAt: "placeholder-timestamp"
    spec:
      containers:
      - name: kanni-ai
        image: gcr.io/lucky-antler-476111-g9/kanni-ai:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://otel-collector-collector.kanni-ai.svc.cluster.local:4318"
        - name: OTEL_SERVICE_NAME
          value: "kanni-ai-frontend"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=kanni-ai-frontend,service.version=1.0.0"
      - name: nginx-exporter
        image: nginx/nginx-prometheus-exporter:1.1.0
        args:
          - -nginx.scrape-uri=http://localhost:80/nginx_status
        ports:
        - containerPort: 9113
          name: metrics
        resources:
          requests:
            memory: "16Mi"
            cpu: "10m"
          limits:
            memory: "32Mi"
            cpu: "50m"