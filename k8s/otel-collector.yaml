apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: kanni-ai
spec:
  image: otel/opentelemetry-collector-contrib:latest
  env:
    - name: GRAFANA_PROMETHEUS_TOKEN
      valueFrom:
        secretKeyRef:
          name: grafana-tokens
          key: prometheus-token
    - name: GRAFANA_LOKI_TOKEN
      valueFrom:
        secretKeyRef:
          name: grafana-tokens
          key: loki-token
  config:
    extensions:
      basicauth/grafana:
        client_auth:
          username: "2737163"
          password: "${GRAFANA_PROMETHEUS_TOKEN}"
      basicauth/loki:
        client_auth:
          username: "1364258"
          password: "${GRAFANA_LOKI_TOKEN}"

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
            - job_name: 'kanni-ai-consolidated'
              static_configs:
                - targets: ['kanni-ai-service:80']
              metrics_path: '/app-metrics'
              scrape_interval: 30s
              scrape_timeout: 10s
              scrape_timeout: 10s
      # Minimal log collection - only OTLP logs from instrumented applications

    processors:
      batch:
        timeout: 10s
        send_batch_size: 512
        send_batch_max_size: 1024
      resource:
        attributes:
          - key: service.name
            value: kanni-ai
            action: upsert
          - key: deployment.environment
            value: production
            action: upsert
      attributes:
        actions:
          - key: job
            action: delete
      # Log filtering - only send important logs to avoid rate limiting
      filter/logs:
        logs:
          log_record:
            - 'IsMatch(body, ".*[Ee]rror.*") or IsMatch(body, ".*[Ww]arn.*") or IsMatch(body, ".*[Ff]ail.*")'
      # Log sampling - only send 10% of info/debug logs  
      probabilistic_sampler/logs:
        sampling_percentage: 10

    exporters:
      prometheusremotewrite:
        endpoint: "https://prometheus-prod-65-prod-eu-west-2.grafana.net/api/prom/push"
        auth:
          authenticator: basicauth/grafana
        resource_to_telemetry_conversion:
          enabled: true
      
      otlphttp/logs:
        endpoint: "https://logs-prod-012.grafana.net/otlp"
        auth:
          authenticator: basicauth/loki
      
      debug:
        verbosity: detailed

    service:
      extensions: [basicauth/grafana, basicauth/loki]
      pipelines:
        metrics:
          receivers: [otlp, prometheus]
          processors: [batch, resource, attributes]
          exporters: [prometheusremotewrite, debug]
        logs:
          receivers: [otlp]
          processors: [batch, resource]
          exporters: [otlphttp/logs, debug]