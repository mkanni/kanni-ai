name: Deploy to GKE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GKE_CLUSTER: kanni-ai-poc
  GKE_REGION: europe-west1
  DEPLOYMENT_NAME: kanni-ai-app
  IMAGE: kanni-ai
  NAMESPACE: kanni-ai

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test

    - name: Build application
      run: npm run build

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: |-
        gcloud --quiet auth configure-docker

    - name: Get the GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_REGION" --project "${{ secrets.GCP_PROJECT_ID }}"

    - name: Build the Docker image
      run: |-
        docker build \
          --tag "gcr.io/${{ secrets.GCP_PROJECT_ID }}/$IMAGE:$GITHUB_SHA" \
          --tag "gcr.io/${{ secrets.GCP_PROJECT_ID }}/$IMAGE:latest" \
          .

    - name: Publish the Docker image to GCR
      run: |-
        docker push "gcr.io/${{ secrets.GCP_PROJECT_ID }}/$IMAGE:$GITHUB_SHA"
        docker push "gcr.io/${{ secrets.GCP_PROJECT_ID }}/$IMAGE:latest"

    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    - name: Deploy
      run: |-
        # Replace the image name in the k8s template
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n $NAMESPACE
        kubectl get services -o wide -n $NAMESPACE